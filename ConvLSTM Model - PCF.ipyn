{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BOSS - ConvLSTM Model - PCF.ipyn","version":"0.3.2","provenance":[],"collapsed_sections":["VKUn9bgNj7Gl","FqSsDNBpqsip"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"6GEZ0gtRXWoZ","colab_type":"text"},"cell_type":"markdown","source":["ref: https://machinelearningmastery.com/how-to-develop-rnn-models-for-human-activity-recognition-time-series-classification/"]},{"metadata":{"id":"6Je6OUkqqsif","colab_type":"code","colab":{}},"cell_type":"code","source":["import os\n","from scipy.io import loadmat\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","\n","import pickle\n","import re\n","\n","from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"metadata":{"id":"9wT0eWLNqsii","colab_type":"text"},"cell_type":"markdown","source":["## Read Data"]},{"metadata":{"id":"VKUn9bgNj7Gl","colab_type":"text"},"cell_type":"markdown","source":["### Mount google drive"]},{"metadata":{"id":"buThuWRhjOvM","colab_type":"code","colab":{}},"cell_type":"code","source":["# Mount Google drive\n","from google.colab import drive\n","\n","# This will prompt for authorization.\n","drive.mount('/content/gdrive')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"PdkRlyuMjqoh","colab_type":"code","colab":{}},"cell_type":"code","source":["# Here you must try by yourself where the path to the dataset folder is !!\n","# e.g. !ls \"gdrive/My Drive/Colab Notebooks/DME/datasets\"\n","!ls \"gdrive\""],"execution_count":0,"outputs":[]},{"metadata":{"id":"YSu2jDSckK5B","colab_type":"code","colab":{}},"cell_type":"code","source":["# Then assign the path here.\n","# This is the path for my GG drive, change it according to your path\n","# dataset_path = \"gdrive/My Drive/Colab Notebooks/DME/datasets\"\n","\n","# Your folder path here\n","dataset_path = \"gdrive/My Drive/Colab Notebooks/DME/datasets\""],"execution_count":0,"outputs":[]},{"metadata":{"id":"FqSsDNBpqsip","colab_type":"text"},"cell_type":"markdown","source":["### Read data from csv"]},{"metadata":{"id":"PV64-5xDqsip","colab_type":"code","colab":{}},"cell_type":"code","source":["try:\n","  dataset_path\n","except:\n","  dataset_path = os.path.join(os.getcwd(), 'datasets')\n","\n","df_train_pcf = pd.read_csv(os.path.join(dataset_path, 'df_train_pcf.csv'))\n","df_test_pcf = pd.read_csv(os.path.join(dataset_path, 'df_test_pcf.csv'))\n","df_train_raw = pd.read_csv(os.path.join(dataset_path, 'df_train_raw.csv'))\n","df_test_raw = pd.read_csv(os.path.join(dataset_path, 'df_test_raw.csv'))\n","\n","label_dict = {2: 'left', 3: 'right', 7: 'word'}\n","df_train_pcf.replace({'label' : label_dict}, inplace=True)\n","df_train_raw.replace({'label' : label_dict}, inplace=True)\n","\n","pcf_setup = pickle.load(open(os.path.join(dataset_path, 'pcf_setup.obj'), \"rb\"))\n","raw_setup = pickle.load(open(os.path.join(dataset_path, 'raw_setup.obj'), \"rb\"))\n","\n","pcf_channels = pcf_setup['channels']\n","raw_channels = raw_setup['channels']"],"execution_count":0,"outputs":[]},{"metadata":{"id":"rJcl1hcL4gkM","colab_type":"text"},"cell_type":"markdown","source":["## ConvLSTM"]},{"metadata":{"id":"ETpqnjuf6dDu","colab_type":"code","outputId":"48209007-ea7d-49b2-bf9a-8810a3cbb5cf","executionInfo":{"status":"ok","timestamp":1554250829741,"user_tz":-60,"elapsed":45737,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.layers import Flatten\n","from keras.layers import Dropout\n","from keras.layers import LSTM\n","from keras.layers import TimeDistributed\n","from keras.layers import ConvLSTM2D\n","from keras.utils import to_categorical"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"metadata":{"id":"9tjKa7cO4qoM","colab_type":"code","colab":{}},"cell_type":"code","source":["# Load dataset\n","def load_dataset(df, sessions=[1,2,3], subjects=[1,2,3]):\n","    data = df.copy()\n","    sampling_rate = 16\n","\n","    interest_index = data['session'].isin(sessions) & data['subject'].isin(subjects)\n","\n","    data_columns = data.drop(columns=['label', 'session', 'subject']).columns\n","\n","    label_dict = {'left': 0, 'right': 1, 'word': 2}\n","    data.replace({'label' : label_dict}, inplace=True)\n","\n","    X = data[interest_index][data_columns].values\n","    y = data[interest_index]['label'].values\n","\n","    n_features = X.shape[1]\n","\n","    X = X.reshape(X.shape[0]//sampling_rate, sampling_rate, n_features)\n","    y = to_categorical(y[::sampling_rate])\n","\n","    trainX, testX, trainy, testy = train_test_split(X, y, test_size=0.3, random_state=1)\n","    return trainX, trainy, testX, testy\n","\n","def load_dataset_by_subjects(df, subjects_train=[1,2], subjects_test=[3]):\n","    data = df.copy()\n","    sampling_rate = 16\n","\n","    train_index = data['subject'].isin(subjects_train)\n","    test_index = data['subject'].isin(subjects_test)\n","\n","    data_columns = data.drop(columns=['label', 'session', 'subject']).columns\n","  \n","    label_dict = {'left': 0, 'right': 1, 'word': 2}\n","    data.replace({'label' : label_dict}, inplace=True)\n","\n","    trainX = data[train_index][data_columns].values\n","    testX = data[test_index][data_columns].values\n","    trainy = data[train_index]['label'].values\n","    testy = data[test_index]['label'].values\n","  \n","    n_features = trainX.shape[1]\n","\n","    trainX = trainX.reshape(trainX.shape[0]//sampling_rate, sampling_rate, n_features)\n","    testX = testX.reshape(testX.shape[0]//sampling_rate, sampling_rate, n_features)\n","    trainy = to_categorical(trainy[::sampling_rate])\n","    testy = to_categorical(testy[::sampling_rate])\n","\n","    return trainX, trainy, testX, testy\n"," \n","# fit and evaluate a model\n","def evaluate_model(trainX, trainy, testX, testy):\n","    # define model\n","    verbose, epochs, batch_size = 0, 25, 64\n","    n_timesteps, n_features, n_outputs = trainX.shape[1], trainX.shape[2], trainy.shape[1]\n","    # reshape into subsequences (samples, time steps, rows, cols, channels)\n","    n_steps, n_length = 4, 4\n","    trainX = trainX.reshape((trainX.shape[0], n_steps, 1, n_length, n_features))\n","    testX = testX.reshape((testX.shape[0], n_steps, 1, n_length, n_features))\n","    # define model\n","    model = Sequential()\n","    model.add(ConvLSTM2D(filters=64, kernel_size=(1,3), activation='relu', input_shape=(n_steps, 1, n_length, n_features)))\n","    model.add(Dropout(0.5))\n","    model.add(Flatten())\n","    model.add(Dense(100, activation='relu'))\n","    model.add(Dense(n_outputs, activation='softmax'))\n","    model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n","    # fit network\n","#   model.fit(trainX, trainy, epochs=epochs, batch_size=batch_size, verbose=verbose)\n","    model.fit(trainX, trainy, epochs=epochs, verbose=verbose)\n","    # evaluate model\n","#   _, accuracy = model.evaluate(testX, testy, batch_size=batch_size, verbose=0)\n","    _, accuracy = model.evaluate(testX, testy, verbose=0)\n","    return accuracy\n","\n","# summarize scores\n","def summarize_results(scores):\n","    print(scores)\n","    m, s = np.mean(scores), np.std(scores)\n","    print('Accuracy: %.3f%% (+/-%.3f)' % (m, s))\n","  \n","def df_channel_norm(df, channels):\n","    df_norm = df.copy()\n","    for channel in pcf_channels:\n","        df_channel = df_norm.filter(regex=channel)\n","        df_norm[df_channel.columns] = df_channel.div(df_channel.sum(axis=1), axis='index')\n","    return df_norm\n","\n","# run an experiment\n","def run_experiment(df, repeats=10, sessions=[1,2,3], subjects=[1,2,3]):\n","    # load data\n","    trainX, trainy, testX, testy = load_dataset(df, sessions, subjects)\n","    # repeat experiment\n","    scores = list()\n","    for r in range(repeats):\n","        score = evaluate_model(trainX, trainy, testX, testy)\n","        score = score * 100.0\n","        print('>#%d: %.3f' % (r+1, score))\n","        scores.append(score)\n","    # summarize results\n","    summarize_results(scores)\n","\n","def run_experiment_by_subjects(df, repeats=10, subjects_train=[1,2], subjects_test=[3]):\n","    # load data\n","    trainX, trainy, testX, testy = load_dataset_by_subjects(df, subjects_train, subjects_test)\n","    # repeat experiment\n","    scores = list()\n","    for r in range(repeats):\n","        score = evaluate_model(trainX, trainy, testX, testy)\n","        score = score * 100.0\n","        print('>#%d: %.3f' % (r+1, score))\n","        scores.append(score)\n","    # summarize results\n","    summarize_results(scores)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"PV98J1PTGkXc","colab_type":"code","outputId":"45087ce6-780a-420c-ef15-0f8328e07598","executionInfo":{"status":"ok","timestamp":1554250831242,"user_tz":-60,"elapsed":36988,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["trainX, trainy, testX, testy = load_dataset(df_train_pcf)\n","trainX.shape, trainy.shape, testX.shape, testy.shape"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1365, 16, 96), (1365, 3), (586, 16, 96), (586, 3))"]},"metadata":{"tags":[]},"execution_count":8}]},{"metadata":{"id":"qlsXd2fJ2dkw","colab_type":"code","outputId":"530a56a1-0f2b-49db-cc5c-9496fd7fc029","executionInfo":{"status":"ok","timestamp":1554251725563,"user_tz":-60,"elapsed":879810,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":394}},"cell_type":"code","source":["run_experiment_by_subjects(df_channel_norm(df_train_pcf, pcf_channels), subjects_train=[1,2], subjects_test=[3])"],"execution_count":9,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Colocations handled automatically by placer.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3445: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.cast instead.\n",">#1: 35.925\n",">#2: 36.547\n",">#3: 36.547\n",">#4: 35.925\n",">#5: 35.614\n",">#6: 35.770\n",">#7: 35.614\n",">#8: 36.858\n",">#9: 36.392\n",">#10: 35.925\n","[35.925349922239505, 36.54743390357698, 36.54743390357698, 35.925349922239505, 35.61430793157076, 35.769828926905134, 35.61430793157076, 36.85847589424572, 36.39191290824261, 35.925349922239505]\n","Accuracy: 36.112% (+/-0.416)\n"],"name":"stdout"}]},{"metadata":{"id":"W6htyQIUGtXq","colab_type":"code","outputId":"a586ad7c-15ab-4719-8ed5-6e876f09c2f8","executionInfo":{"status":"ok","timestamp":1554252683785,"user_tz":-60,"elapsed":1779118,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"cell_type":"code","source":["run_experiment_by_subjects(df_train_pcf, subjects_train=[1,2], subjects_test=[3])"],"execution_count":10,"outputs":[{"output_type":"stream","text":[">#1: 38.880\n",">#2: 35.925\n",">#3: 37.636\n",">#4: 37.170\n",">#5: 37.636\n",">#6: 36.858\n",">#7: 35.925\n",">#8: 36.236\n",">#9: 38.258\n",">#10: 36.236\n","[38.88024883359253, 35.925349922239505, 37.636080870917574, 37.16951788491446, 37.636080870917574, 36.85847589424572, 35.925349922239505, 36.23639191754313, 38.25816485225506, 36.23639191754313]\n","Accuracy: 37.076% (+/-0.969)\n"],"name":"stdout"}]},{"metadata":{"id":"cOvht2o0BBro","colab_type":"code","outputId":"e966ddd4-ab52-405e-bc96-4f483f94a4d7","executionInfo":{"status":"ok","timestamp":1554253334229,"user_tz":-60,"elapsed":2429535,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"cell_type":"code","source":["# run the experiment\n","run_experiment(df_train_pcf, sessions=[1,2,3], subjects=[1])"],"execution_count":11,"outputs":[{"output_type":"stream","text":[">#1: 77.273\n",">#2: 80.303\n",">#3: 78.788\n",">#4: 77.778\n",">#5: 78.788\n",">#6: 77.778\n",">#7: 77.273\n",">#8: 80.303\n",">#9: 77.273\n",">#10: 79.798\n","[77.27272727272727, 80.3030303030303, 78.78787878787878, 77.77777771757106, 78.78787878787878, 77.77777777777779, 77.27272727272727, 80.3030303030303, 77.27272727272727, 79.7979797979798]\n","Accuracy: 78.535% (+/-1.179)\n"],"name":"stdout"}]},{"metadata":{"id":"pQ8iTOlVJ7xg","colab_type":"code","outputId":"fd25e764-6f0c-4e47-f75e-542692fea083","executionInfo":{"status":"ok","timestamp":1554254115428,"user_tz":-60,"elapsed":3210718,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"cell_type":"code","source":["# run the experiment\n","run_experiment(df_train_pcf, sessions=[1,2,3], subjects=[2])"],"execution_count":12,"outputs":[{"output_type":"stream","text":[">#1: 61.026\n",">#2: 62.051\n",">#3: 63.077\n",">#4: 64.615\n",">#5: 63.077\n",">#6: 61.538\n",">#7: 63.077\n",">#8: 63.590\n",">#9: 62.051\n",">#10: 61.026\n","[61.02564105620751, 62.051282081848534, 63.076923107489556, 64.6153846459511, 63.076923107489556, 61.53846156902802, 63.076923107489556, 63.58974362031008, 62.051282081848534, 61.02564105620751]\n","Accuracy: 62.513% (+/-1.111)\n"],"name":"stdout"}]},{"metadata":{"id":"GJXpRknvJ7zv","colab_type":"code","outputId":"c9a58946-3359-4fe8-8be2-22f09fb7bd1a","executionInfo":{"status":"ok","timestamp":1554255093336,"user_tz":-60,"elapsed":4188609,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"cell_type":"code","source":["# run the experiment\n","run_experiment(df_train_pcf, sessions=[1,2,3], subjects=[3])"],"execution_count":13,"outputs":[{"output_type":"stream","text":[">#1: 48.705\n",">#2: 54.922\n",">#3: 54.404\n",">#4: 47.668\n",">#5: 54.404\n",">#6: 50.259\n",">#7: 50.259\n",">#8: 54.404\n",">#9: 52.850\n",">#10: 53.886\n","[48.704663212435236, 54.92227979274611, 54.40414507772021, 47.66839378238342, 54.40414507772021, 50.259067357512954, 50.259067357512954, 54.40414507772021, 52.84974093264248, 53.8860103626943]\n","Accuracy: 52.176% (+/-2.560)\n"],"name":"stdout"}]},{"metadata":{"id":"BIjih8N5J9sc","colab_type":"code","outputId":"6bc3d74b-6d27-407c-9aa7-4911d10d4cc3","executionInfo":{"status":"ok","timestamp":1554256707497,"user_tz":-60,"elapsed":5802752,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"cell_type":"code","source":["# run the experiment\n","run_experiment(df_train_pcf, sessions=[1,2,3], subjects=[1,2,3])"],"execution_count":14,"outputs":[{"output_type":"stream","text":[">#1: 61.433\n",">#2: 62.116\n",">#3: 60.922\n",">#4: 61.092\n",">#5: 61.945\n",">#6: 60.239\n",">#7: 60.068\n",">#8: 59.898\n",">#9: 60.068\n",">#10: 61.945\n","[61.43344713966188, 62.11604099631717, 60.9215017471704, 61.09215021133423, 61.94539253215334, 60.238907849829346, 60.06825942635129, 59.89761092150171, 60.06825942635129, 61.94539253215334]\n","Accuracy: 60.973% (+/-0.822)\n"],"name":"stdout"}]},{"metadata":{"id":"IzrIBY0VrK9M","colab_type":"code","outputId":"fee86311-a1ca-4850-ddf1-f748412ad39e","executionInfo":{"status":"ok","timestamp":1554257944244,"user_tz":-60,"elapsed":7039472,"user":{"displayName":"Danuphan Suwanwong","photoUrl":"","userId":"16514894279538784287"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"cell_type":"code","source":["# run the experiment\n","run_experiment(df_train_pcf, sessions=[1,2,3], subjects=[1,2])"],"execution_count":15,"outputs":[{"output_type":"stream","text":[">#1: 65.394\n",">#2: 64.631\n",">#3: 64.377\n",">#4: 65.649\n",">#5: 65.903\n",">#6: 64.885\n",">#7: 66.158\n",">#8: 65.903\n",">#9: 68.702\n",">#10: 66.921\n","[65.39440205837327, 64.63104327974733, 64.37659035353866, 65.64885498458193, 65.90330791079057, 64.88549618699776, 66.15776081804101, 65.90330789183236, 68.70229008012753, 66.92111961562517]\n","Accuracy: 65.852% (+/-1.192)\n"],"name":"stdout"}]}]}